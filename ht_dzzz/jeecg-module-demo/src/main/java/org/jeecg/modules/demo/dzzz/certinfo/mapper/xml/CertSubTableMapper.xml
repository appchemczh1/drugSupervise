<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jeecg.modules.demo.dzzz.certinfo.mapper.CertSubTableMapper">

	<select id="selectList" resultType="org.jeecg.modules.demo.dzzz.certinfo.entity.CertSubTable">
		<if test="ew != null and ew.sqlFirst != null">${ew.sqlFirst}</if>
		SELECT
		<choose>
			<when test="ew != null and ew.sqlSelect != null">${ew.sqlSelect}</when>
			<otherwise>a.*,#{tableName} TABLE_NAME</otherwise>
		</choose>
		FROM ${tableName} a
		<where>
			<if test="ew.sqlSegment != null and ew.sqlSegment != '' and ew.nonEmptyOfWhere">${ew.sqlSegment}</if>
		</where>
		<if test="ew.sqlSegment != null and ew.sqlSegment != '' and ew.emptyOfWhere">${ew.sqlSegment}</if>
		<if test="ew != null and ew.sqlComment != null">${ew.sqlComment}</if>
	</select>

	<insert id="save">
		INSERT INTO ${tableName}(<foreach item="item" collection="columns" separator=",">${item}</foreach>)
		VALUES(<foreach item="item" collection="args" separator=",">#{item}</foreach>)
	</insert>

	<insert id="saveBatch">
		INSERT INTO ${tableName}(<foreach item="item" collection="columns" separator=",">${item}</foreach>) VALUES
		<foreach item="array" collection="args" separator=",">
			(<foreach item="item" collection="array" separator=",">#{item}</foreach>)
		</foreach>
	</insert>

	<update id="copyToInsert">
		INSERT INTO ${targetTn} SELECT * FROM ${sourceTn}
		<where>${ew.sqlSegment}</where>
	</update>

	<update id="copyToSave">
		MERGE INTO ${targetTn} t USING (
			SELECT
				<foreach item="item" collection="columns" separator=",">
					<if test="item == 'XZSPID' and newXzspId != null and newXzspId != ''">#{newXzspId} XZSPID</if>
					<if test="item != 'XZSPID' or newXzspId == null or newXzspId == ''">${item}</if>
				</foreach>
			FROM ${sourceTn} <where>${ew.sqlSegment}</where>
		) s ON (t.ID=s.ID AND t.XZSPID=s.XZSPID)
		WHEN NOT MATCHED THEN INSERT(<foreach item="item" collection="columns" separator=",">${item}</foreach>) VALUES(<foreach item="item" collection="columns" separator=",">s.${item}</foreach>)
		WHEN MATCHED THEN UPDATE SET <foreach item="item" collection="columns" separator=","><if test="item != 'ID' and item != 'XZSPID'">t.${item}=s.${item}</if></foreach>
	</update>

	<delete id="delete">
		DELETE FROM ${tableName} <where>${ew.sqlSegment}</where>
	</delete>

</mapper>
